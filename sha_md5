#!/bin/bash

###########################
# Comprovación de sha y md5 #
###########################

#Creación de funciones encargadas de realizar la comprobacion del archivo
funcion_sha () {
	ruta_archivo=$1;
	clave_original=$(zenity --entry --title="Clave sha original" --text="Ingresa la clave sha original" --entry-text="aqui la clave");
	clave_actual=$(shasum $ruta_archivo);
	
	if [ $clave_original = $clave_actual ] 
	then
		$(zenity --info --title="Resultado de comprovación sha" --text="Las claves coinciden la integridad de tu archivo no a sido violada");
	else
			$(zenity --error	--title="Resultado de comprobacion sha" --text="Las claves no coinciden la integridad de tu archivo a sido violada");
	fi
}

funcion_md5 () {
	ruta_archivo=$1;
	clave_original=$(zenity --entry --title="Clave sha original" --text="Ingresa la clave sha original" --entry-text="aqui la clave");
	clave_actual=$(md5sum $ruta_archivo);
	
	if [ $clave_original = $clave_actual ] 
	then
		$(zenity --info --title="Resultado de comprovación md5" --text="Las claves coinciden la integridad de tu archivo no a sido violada");
	else
			$(zenity --error	--title="Resultado de comprobacion md5" --text="Las claves no coinciden la integridad de tu archivo a sido violada");
	fi
}
 
#hacemos una seleccion del archivo del cual queremos comprobar su clave sha o md5

archivo=$(zenity --file-selection --title="Selecciona un archivo para comprobar su autenticidad");

#seleccionamos el tipo de comprovación a realizar sha o md5

sha_md5=$(zenity --list --title="Seleccion de tipo de comprovación" --text="¿Que tipo de comprovación deceas hacer?" --radiolist --column="radio" --column="opción" "1" "sha" "2" "md5");

#Creación de estructura case para decidir que proceso ejecutar

case $sha_md5 in
	"sha"|"sha")
		echo "Estoy en sha";
		funcion_sha $archivo ;;
	"md5"|"md5")
		echo "Estoy en md5";
		funcion_md5 $archivo ;;
	*)
		$(zenity --error --title="Error de selección" --text="Opción no valida porfavor selecciona una por lo menos") ;;
esac

echo "Fin del programa :(";
